/// <cursor>
/// LUCHY - Widget pr√©visualisation image compl√®te
///
/// Affichage temporaire de l'image compl√®te du puzzle pour
/// r√©f√©rence pendant la r√©solution.
///
/// COMPOSANTS PRINCIPAUX:
/// - ImagePreview: ConsumerWidget pour pr√©visualisation
/// - Visibility control: Affichage bas√© sur √©tat showPreview
/// - Image display: Affichage centr√© image optimis√©e
/// - Memory management: Gestion efficace m√©moire images
///
/// √âTAT ACTUEL:
/// - Affichage: Toggle via bouton preview toolbar
/// - Performance: Optimis√© pour grandes images
/// - Responsivit√©: Adaptation automatique taille √©cran
/// - √âtat: G√©r√© via gameStateProvider.showPreview
///
/// HISTORIQUE R√âCENT:
/// - Optimisation performance pour grandes images
/// - Am√©lioration gestion m√©moire et cache
/// - Int√©gration fluide avec √©tat jeu global
/// - Documentation mise √† jour format <cursor>
///
/// üîß POINTS D'ATTENTION:
/// - Memory usage: Dispose correctement images apr√®s usage
/// - Performance: √âviter reloads inutiles image
/// - State sync: Maintenir coh√©rence avec providers
/// - Responsive: Adaptation toutes tailles √©cran
///
/// üöÄ PROCHAINES √âTAPES:
/// - Ajouter zoom/pan pour grandes images
/// - Impl√©menter overlay semi-transparent
/// - Optimiser pour mode paysage
/// - Ajouter animations transition show/hide
///
/// üîó FICHIERS LI√âS:
/// - features/puzzle/domain/providers/game_providers.dart: √âtat showPreview
/// - features/puzzle/presentation/screens/puzzle_game_screen.dart: Int√©gration
/// - features/puzzle/presentation/widgets/toolbar/custom_toolbar.dart: Toggle
///
/// CRITICALIT√â: ‚≠ê‚≠ê‚≠ê (Aide utilisateur importante)
/// </cursor>
///
/// STATE MANAGEMENT:
/// - Uses StateProvider for visibility
/// - Handles image state
/// - Controls preview timing
///
/// HISTORY:
/// v1.0 (2024-01-30):
/// - Initial documentation
/// - Documented widget structure
/// - Added state management section
///
/// </claude>
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:luchy/features/puzzle/domain/providers/game_providers.dart';

final imagePreviewVisibilityProvider = StateProvider<bool>((ref) => true);

class ImagePreview extends ConsumerWidget {
  const ImagePreview({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final showPreview = ref.watch(imagePreviewVisibilityProvider);
    final imageState = ref.watch(imageProcessingProvider);

    if (!showPreview || imageState.fullImage == null) {
      return const SizedBox.shrink();
    }

    return Center(
      child: Image.memory(
        imageState.fullImage!,
        fit: BoxFit.contain,
      ),
    );
  }
}

// Extension pour contr√¥ler la visibilit√© de l'aper√ßu
extension ImagePreviewControl on WidgetRef {
  void showImagePreviewTemporarily(
      {Duration duration = const Duration(seconds: 3)}) {
    read(imagePreviewVisibilityProvider.notifier).state = true;
    Future.delayed(duration, () {
      read(imagePreviewVisibilityProvider.notifier).state = false;
    });
  }
}
